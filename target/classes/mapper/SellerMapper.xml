<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sunstar.mapper.SellerMapper">

	<parameterMap type="java.util.HashMap" id="HashMap" />

	<!-- 카테고리 목록 불러오기 -->
	<select id="getCategory" resultType="com.sunstar.dto.CategoryDTO">
		select * from category
	</select>
	
	<!-- 2차 카테고리 갯수 반환 -->
	<select id="getCategoryCount" resultType="int">
		select distinct lv2 from category;
	</select>
	
	<!-- 상품 추가  -->
	<insert id="addProduct" parameterType="com.sunstar.dto.ProductDTO">
		insert into product_list(product_name, price, cost, thumb_img, detail_img1, detail_img2, detail_img3, explains, public_state, review_state, category_code, seller_code, add_date)
		values(#{product_name},#{price},#{cost},#{thumb_img}, #{detail_img1},  #{detail_img2},  #{detail_img3}, #{explains},#{public_state},#{review_state}, #{category_code}, #{seller_code}, now() )
	</insert>
	
	<!--  -->
	<select id="aProduct" resultType="int">
		select product_code
		from product_list 
		where product_code = (select max(product_code) from product_list)
	</select>
	
	<!-- 옵션 추가  -->
	<insert id="addOptions" parameterType="com.sunstar.dto.OptionDTO">

		insert into options(product_code, option2, option1, inventory, add_price)
		values(#{product_code},#{option2},#{option1},#{inventory},#{add_price})
	
	</insert>
	
	<!-- 상픔 리스트 (판매자) -->
	<select id="list" parameterType="string" resultType="com.sunstar.dto.ProductDTO">
		select p.product_code, product_name, price, cost, o.option1, o.option2, o.inventory, o.add_price, 
		thumb_img, detail_img1, detail_img2, detail_img3,explains, public_state, review_state, 
		c.lv1, c.lv2, c.lv3, p.product_code, s.basic_shipping_cost
		from product_list p  join category c
		on p.category_code = c.category_code
		left join options o
		on p.product_code = o.product_code
		left join seller s
		on p.seller_code = s.seller_code
        where p.product_code = #{seller_code}
		order by product_code desc
		
		<!-- where seller_code = '' 추가해야돼 -->
	</select>
	
	<!-- 옵션 삭제 -->
	<delete id="deleteProductOptions" parameterType="int">
		delete from options where product_code=#{product_code}
	</delete>	
	
	<!-- 상품 삭제  -->
	<delete id="deleteProduct" parameterType="int">
		delete from product_list where product_code=#{product_code}
	</delete>	
	
	<!-- 옵션 가지수 가져오기  -->
	<select id="getOptionColor" parameterType="int" resultType="string">
		select option1
		from options
		where product_code=#{product_code}
		order by product_code desc
	</select>
	
	<!-- 재고 업데이트 -->
	<update id="updateInventory" parameterType="com.sunstar.dto.OptionDTO">
		update options 
		set inventory = inventory+#{inventory}
		where product_code=#{product_code} and option1=#{option1}
	</update>
	
	<!-- 주문목록 -->
	<select id="orderlist" parameterType="string" resultType="com.sunstar.dto.OrderDTO">
	
	   select o.order_code, l.order_no, l.product_code, p.product_name, l.option1, l.option2, l.quantity, l.add_price,  p.price, o.message, 
			  o.order_way,  o.to_name, c.tel, o.shipping_addr1, o.shipping_addr2, o.shipping_addr3, o.shipping_zip, l.delivery_state, l.tracking_no
       from ordered o left join order_list l
       on o.order_code = l.order_code
       inner join customer c 
       on o.id = c.id
       left join product_list p
       on l.product_code = p.product_code
  	   where p.seller_code = #{seller_code}
		order by order_code desc
	</select>
	
		<!-- 배송대기 주문목록 -->
	<select id="shippinglist" parameterType="string" resultType="com.sunstar.dto.OrderDTO">
	
	   select o.delivery_state, l.product_code, p.price, o.order_code, l.order_no, l.option1, l.option2, l.inventory, l.add_price, o.order_way, o.message, c.name, c.tel, s.shipping_addr1, s.shipping_addr2, s.shipping_addr3, s.shipping_zip
       from ordered o left join order_list l
       on o.order_code = l.order_code
       inner join customer c 
       on o.id = c.id
       left join ship s
       on c.id = s.id
       left join product_list p
       on l.product_code = p.product_code
       where o.delivery_state = '배송준비중' and seller_code = #{seller_code}
		<!-- where seller = 'solyi' -->
	</select>
	
	
	<select id="theOrderlist" resultType="com.sunstar.dto.OrderDTO" parameterType="string">
	
	   select l.delivery_state, l.tracking_no, l.product_code, p.price, o.order_code, l.order_no, l.option1, l.option2, l.inventory, l.add_price, o.order_way, o.message, c.name, c.tel, s.shipping_addr1, s.shipping_addr2, s.shipping_addr3, s.shipping_zip
       			
       
       from ordered o left join order_list l
       on o.order_code = l.order_code
       inner join customer c 
       on o.id = c.id
       left join ship s
       on c.id = s.id
       left join product_list p
       on l.product_code = p.product_code
       where l.order_no = #{order_no}
	</select>
	
	<!-- 주문목록 - 단계변경  -->
	<update id="changeStep" parameterType="com.sunstar.dto.OrderDTO">
		update order_list
		set delivery_state = #{delivery_state}
		where order_no = #{order_no}
	</update>
	
	<update id="updateTracking" parameterType="com.sunstar.dto.OrderDTO">
		update order_list
		set tracking_no = #{tracking_no},
			delivery_state = '배송중'			
		where order_no = #{order_no}
	</update>
	
	<select id="sellerInfo" parameterType="string" resultType="com.sunstar.dto.SellerDTO">
		select *
		from seller
		where seller_code = #{seller_code}
	
	</select>
	
	<update id="changePublicState" parameterType="com.sunstar.dto.ProductDTO">
		update product_list
		set public_state = #{public_state}
		where product_code = #{product_code}
	</update>
	
	<update id="changeReviewState" parameterType="com.sunstar.dto.ProductDTO">
		update product_list
		set review_state = #{review_state}
		where product_code = #{product_code}
		
	</update>
	
	
	
	<update id="changeInfo" parameterType="com.sunstar.dto.SellerDTO">
		update seller
 	 <set>	
      <if test="seller_tel  	 	!= null   		and 	seller_tel 		 	!= ''  	">		seller_tel=#{seller_tel},</if>
      <if test="seller_email 		!= null   		and 	seller_email 		!= '' 	">		seller_email=#{seller_email},</if>
      <if test="seller_address1   	!= null  		and	 	seller_address1 	!= '' 	">		seller_address1=#{seller_address1},</if>
      <if test="seller_address2   	!= null   		and	 	seller_address2 	!= '' 	">		seller_address2=#{seller_address2},</if>
      <if test="seller_address3   	!= null   		and	 	seller_address3 	!= '' 	">		seller_address3=#{seller_address3},</if>
      <if test="seller_zip   		!= null   		and 	seller_zip 			!= '' 	">		seller_zip=#{seller_zip},</if>
      <if test="bank         		!= null   		and 	bank 				!= '' 	">		bank=#{bank},</if>
      <if test="bank_no     		!= null   		and 	bank_no 			!= ''	">		bank_no=#{bank_no},</if>
      <if test="seller_deadline 	!= null   		and 	seller_deadline     != '' 	">		seller_deadline=#{seller_deadline},</if>
      <if test="shipping_company    != null   		and 	shipping_company    != '' 	">		shipping_company=#{shipping_company},</if>
      <if test="basic_shipping_cost	!= null   		and 	basic_shipping_cost != '' 	">		basic_shipping_cost=#{basic_shipping_cost},</if>
      <if test="free_shipping_cost	!= null  		and		free_shipping_cost 	!= ''	">		free_shipping_cost=#{free_shipping_cost}</if>
      
     </set>
		
		where seller_code = #{seller_code}
	
	</update>
	
	
	<select id="getCount" resultType="int">
		select count(*)
		from product_list p  join category c
		on p.category_code = c.category_code
		left join options o
		on p.product_code = o.product_code
		left join seller s
		on p.seller_code = s.seller_code
      <!--   where p.product_code = #{seller_code} -->

	<!-- 	<where>
			<if test="txt != null and txt != ''">
				<choose>
					<when test="txt != null and txt != ''">
						and p.product_code = '%'||#{txt}||'%'
					</when>

					<when test="txt != null and txt != ''">
						and p.product_name like '%'||#{txt}||'%'
				
					</when>
				</choose>
			</if>
		</where> -->
		
	</select>
	
	
	<!-- parameterMap="HashMap" -->
	<select id="productlist"  parameterType="com.sunstar.dto.MakePage"  resultType="com.sunstar.dto.ProductDTO">
		
		
		
		select p.product_code, product_name, price, cost, o.option1, o.option2, o.inventory, o.add_price, o.accumulation, thumb_img, detail_img1, detail_img2, detail_img3, explains,
		 public_state, review_state, c.lv1, c.lv2, c.lv3, p.product_code, s.basic_shipping_cost
		from product_list p  join category c
		on p.category_code = c.category_code
		left join options o
		on p.product_code = o.product_code
		left join seller s
		on p.seller_code = s.seller_code
		where p.seller_code = #{seller_code} 
      <!--   where p.product_code = #{seller_code} -->
    
      <!-- <where>
			<if test="product_code != null and product_code != ''">
				and p.product_code = '%'||#{txt}||'%'
			</if>
			<if test="product_name != null and product_name != ''">
					
						and p.product_name like '%'||#{txt}||'%'
			</if>
		</where>  -->
		
		order by product_code desc
		LIMIT #{startRow}, #{sizePerPage}
	
	</select>
	
	
	<update id="update_seller_info" parameterType="com.sunstar.dto.SellerDTO">
		update seller

	 	<set>
	      <if test="comm_img1   != null   and 	comm_img1  != ''  	">comm_img1=#{comm_img1},</if>
	      <if test="comm_img2 	!= null   and 	comm_img2 != '' 	">comm_img2=#{comm_img2},</if>
	      <if test="comm_img3   != null   and 	comm_img3 != '' 	">comm_img3=#{comm_img3},</if>
	      <if test="seller_bgcolor  != null   and 	seller_bgcolor != '' ">seller_bgcolor=#{seller_bgcolor},</if>
	 	  <if test="seller_color  != null   and 	seller_color != '' ">seller_color=#{seller_color}</if>
	 	
	    </set>	
			where id = #{id}
		</update>
		
		
		<select id="product_list_user"  resultType="com.sunstar.dto.ProductDTO">
		select *
		from product_list
		order by product_code desc
		limit 7,8
		</select>
		
		
		<select id="viewStepOrder" parameterType="string" resultType="com.sunstar.dto.OrderDTO">
			select o.order_code, l.product_code, l.option1, l.option2, l.inventory, l.add_price,  p.price, o.message, 
			o.order_way,  o.to_name, c.tel, o.shipping_addr1, o.shipping_addr2, o.shipping_addr3, o.shipping_zip, l.delivery_state, l.tracking_no
			from ordered o left join order_list l
			on o.order_code = l.order_code
			inner join customer c 
			on o.id = c.id
			left join product_list p
			on l.product_code = p.product_code
			where l.delivery_state = #{view_step}
			order by order_code desc
		</select>
		
		
		<select id="viewProduct"  parameterType="int"  resultType="com.sunstar.dto.ProductDTO">
		
		select p.product_code, product_name, price, cost, o.option1, o.option2, o.inventory, o.add_price, 
			   thumb_img, detail_img1, detail_img2, detail_img3, explains,
		public_state, review_state, c.lv1, c.lv2, c.lv3, p.product_code, s.basic_shipping_cost
		from product_list p  join category c
		on p.category_code = c.category_code
		left join options o
		on p.product_code = o.product_code
		left join seller s
		on p.seller_code = s.seller_code
		
		where p.product_code = #{pcd}
		
		</select>
		
		<update id="updateProduct" parameterType="com.sunstar.dto.ProductDTO">
			update product_list
			
	 	<set>
	      <if test="product_name   != null   and 	product_name  != ''  	">	product_name=#{product_name},</if>
	      <if test="price 	!= null   and 	price 	!= '' 	">	price=#{price},</if>
	      <if test="cost != null   and 	cost != '' 	">	cost=#{cost},</if>
	      <if test="true	">	public_state=#{public_state},</if>
	      <if test="true">	review_state=#{review_state}</if>
	    </set>	
			 	where product_code = #{product_code}
		</update>
		
		
		<select id="getDayProfit" parameterType="string" resultType="com.sunstar.dto.OrderDTO">
			select *
			from ordered o left join order_list l
			on o.order_code = l.order_code
			left join product_list p 
			on l.product_code  = p.product_code
			where o.order_code like CONCAT(#{order_code},'%');

		</select>
		
		<select id="getShipping_Cost" parameterType="com.sunstar.dto.SellerDTO" resultType="com.sunstar.dto.SellerDTO">
			select basic_shipping_cost
			from seller
			where seller_code = #{seller_code}
		
		</select>
		
		<select id="getSellerCode" parameterType="string" resultType="string">
		select seller_code
		from seller
		where id = #{id}
		
		</select>
		
		<select id="getPaid" parameterType="string" resultType="int">
			select count(l.delivery_state)
			from ordered o left join order_list l
            on o.order_code = l.order_code
            left join product_list p 
            on l.product_code = p.product_code
            left join seller s
            on p.seller_code = s.seller_code 
			where l.delivery_state = '결제완료' and s.seller_code = #{seller_code}
		
		</select>
		
		<select id="getReadyCount" parameterType="string" resultType="int">
			select count(l.delivery_state)
			from ordered o left join order_list l
            on o.order_code = l.order_code
            left join product_list p 
            on l.product_code = p.product_code
            left join seller s
            on p.seller_code = s.seller_code 
			where l.delivery_state = '배송준비' and s.seller_code = #{seller_code}
		
		</select>
		
		<select id="getExchangeCount" parameterType="string" resultType="int">
 			select count(l.delivery_state)
			from ordered o left join order_list l
            on o.order_code = l.order_code
            left join product_list p 
            on l.product_code = p.product_code
            left join seller s
            on p.seller_code = s.seller_code 
			where l.delivery_state = '교환요청' and s.seller_code = #{seller_code}
		
		</select>
		
		<select id="getBringBack" parameterType="string" resultType="int">
		 	select count(l.delivery_state)
			from ordered o left join order_list l
            on o.order_code = l.order_code
            left join product_list p 
            on l.product_code = p.product_code
            left join seller s
            on p.seller_code = s.seller_code 
			where l.delivery_state = '반품대기' and s.seller_code = #{seller_code}
		
		
		</select>
		
		<select id="getWaitAnswer" parameterType="string" resultType="int">
		select count(qna_state)
		from qna q join product_list p 
		on q.product_code = p.product_code
		left join seller s
        on p.seller_code = s.seller_code
		where qna_state = '답변대기' and s.seller_code = #{seller_code}
		</select>
		
		
		<select id="getQnaList" parameterType="string" resultType="com.sunstar.dto.QnaDTO">
			select * 
			from qna q join product_list p
			on q.product_code = p.product_code
			where p.seller_code = #{seller_code}
			order by qna_no desc
		</select>
		
		<update id="qna_reply" parameterType="com.sunstar.dto.QnaDTO">
			update qna
			set qna_reply = #{qna_reply}, reply_date = now(), qna_state = #{qna_state}
			where qna_no =#{qna_no}
		
		</update>
		
		
		<select id="searchOrderView" parameterType="string" resultType="com.sunstar.dto.OrderDTO" >
	       select o.order_code, p.product_code, l.option1, l.option2, l.add_price, quantity, price,  o.message, 
	      o.order_way,l.delivery_state, l.tracking_no, l.shipping_company, o.to_name, o.shipping_addr1,o.shipping_addr2,o.shipping_addr3,o.shipping_zip,
	      product_name,l.option1,l.option2,
          s.shipping_company
	      from ordered o left join order_list l
	      on o.order_code=l.order_code
	      left join product_list p
	      on l.product_code = p.product_code
          left join seller s
          on p.seller_code = s.seller_code 
	      where o.order_code= #{order_code}
		</select>
		
		<select id="getReview" parameterType="string" resultType="com.sunstar.dto.ReviewDTO">
           	select distinct(r.review_no),l.order_no, o.order_code, p.product_code, t.option1, t.option2, r.review_content, r.review_star, r.review_writedate, o.id
			from review r left join review_img i
			on r.review_no = i.review_no
	        left join order_list l
	        on l.order_no = r.order_no
	        left join ordered o
	        on o.order_code = l.order_code
			left join product_list p
			on p.product_code = l.product_code
	        left join options t
	        on t.product_code = p.product_code
			where p.seller_code = #{seller_code}
			order by r.review_writedate desc

		
		</select>
		
		<select id="getReviewImgCount" parameterType="int" resultType="com.sunstar.dto.ReviewImgDTO">
            select review_no, img_no, review_img
            from review_img
            where review_no = #{review_no}
		
		</select>

		<delete id="reviewimg_del" parameterType="int">
			delete from review_img
			where review_no = #{review_no}
		</delete>



		<delete id="review_del" parameterType="int">
			delete from review
			where review_no = #{review_no}
		</delete>

		<select id="month_chart" parameterType="com.sunstar.dto.ChartDTO" resultType="integer">
		
		select ifnull(sum(total_price),0)
        from  price r 
        where seller_code = #{seller_code}
        and left(r.order_code, 6) = #{month};
		
		</select>
		<select id="month_chart_plus" parameterType="com.sunstar.dto.ChartDTO" resultType="integer">
	<!-- 	select ifnull(sum(shipping_cost),0)
		from product_list p  join order_list l
		on p.product_code = l.product_code
		join ordered o 
		on o.order_code = l.order_code
		where seller_code = #{seller_code} 
        and left(o.order_code, 6) = #{month}
		order by shipping_cost  
 -->
		</select>
		
		
		<select id="day_chart" parameterType="com.sunstar.dto.ChartDTO" resultType="integer">
		
		select ifnull(sum(total_price), 0)
		from ordered o join price r
		on o.order_code = r.order_code
		where seller_code = #{seller_code}
		and left(o.order_code, 8) = #{yyyymmdd}

		
		</select>
		
		<select id="day_chart_plus" parameterType="com.sunstar.dto.ChartDTO" resultType="integer">
		
		select ifnull(sum(r.shipping_cost_per_seller), 0)
		from ordered o join price r
		on o.order_code = r.order_code
		where seller_code = #{seller_code}
		and left(o.order_code, 8) = #{yyyymmdd}

		
		</select>
		
		
		<delete id="delete_products" parameterType="string">
		delete 
		from product_list
		where seller_code = #{seller_code}
		
		</delete>
		<delete id="delete_auth" parameterType="string">
		delete 
		from auth 
		where id = #{id} and auth = 'ROLE_MANAGER'
		
		</delete>
		
		<update id="search_order_update" parameterType="com.sunstar.dto.OrderDTO">
		
		update ordered
		set 
			to_name	= #{to_name},
			shipping_zip = #{shipping_zip},
			message = #{message}
		where order_code = #{order_code}
		</update>
		
		<update id="search_order_update_2" parameterType="com.sunstar.dto.OrderDTO">
		
		update order_list
		set 
			delivery_state = #{delivery_state},
			tracking_no = #{tracking_no}
			
		where order_code = #{order_code}
		</update>
		
</mapper>