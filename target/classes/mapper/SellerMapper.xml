<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sunstar.mapper.SellerMapper">

	<parameterMap type="java.util.HashMap" id="HashMap" />

	<!-- 카테고리 목록 불러오기 -->
	<select id="getCategory" resultType="com.sunstar.dto.CategoryDTO">
		select * from category
	</select>
	
	<!-- 2차 카테고리 갯수 반환 -->
	<select id="getCategoryCount" resultType="int">
		select distinct lv2 from category;
	</select>
	
	<!-- 상품 추가  -->
	<insert id="addProduct" parameterType="com.sunstar.dto.ProductDTO">
		insert into product_list(product_name, price, cost, shipping_cost, thumb_img, detail_img1, detail_img2, detail_img3, explains, public_state, review_state, category_code, seller_code, add_date)
		values(#{product_name},#{price},#{cost},#{shipping_cost},#{thumb_img}, #{detail_img1},  #{detail_img2},  #{detail_img3}, #{explains},#{public_state},#{review_state}, #{category_code}, #{seller_code}, now() )
	</insert>
	
	<!--  -->
	<select id="aProduct" resultType="int">
		select product_code
		from product_list 
		where product_code = (select max(product_code) from product_list)
	</select>
	
	<!-- 옵션 추가  -->
	<insert id="addOptions" parameterType="com.sunstar.dto.OptionDTO">

		insert into options(product_code, option2, option1, inventory, add_price)
		values(#{product_code},#{option2},#{option1},#{inventory},#{add_price})
	
	</insert>
	
	<!-- 상픔 리스트 (판매자) -->
	<select id="list" resultType="com.sunstar.dto.ProductDTO">
		select p.product_code, product_name, price, cost, shipping_cost, o.option1, o.option2, o.inventory, o.add_price, thumb_img, detail_img1, detail_img2, detail_img3,explains, public_state, review_state, c.lv1, c.lv2, c.lv3, p.product_code, s.basic_shipping_cost
		from product_list p  join category c
		on p.category_code = c.category_code
		left join options o
		on p.product_code = o.product_code
		left join seller s
		on p.seller_code = s.seller_code
      <!--   where p.product_code = #{seller_code} -->
		order by product_code desc
		
		<!-- where seller_code = '' 추가해야돼 -->
	</select>
	
	<!-- 옵션 삭제 -->
	<delete id="deleteProductOptions" parameterType="int">
		delete from options where product_code=#{product_code}
	</delete>	
	
	<!-- 상품 삭제  -->
	<delete id="deleteProduct" parameterType="int">
		delete from product_list where product_code=#{product_code}
	</delete>	
	
	<!-- 옵션 가지수 가져오기  -->
	<select id="getOptionColor" parameterType="int" resultType="string">
		select option1
		from options
		where product_code=#{product_code}
		order by product_code desc
	</select>
	
	<!-- 재고 업데이트 -->
	<update id="updateInventory" parameterType="com.sunstar.dto.OptionDTO">
		update options 
		set inventory = inventory+#{inventory}
		where product_code=#{product_code} and option1=#{option1}
	</update>
	
	<!-- 주문목록 -->
	<select id="orderlist" resultType="com.sunstar.dto.OrderDTO">
	
	   select o.order_code, l.product_code, l.option1, l.option2, l.quantity, l.add_price,  p.price, o.message, 
			  o.order_way,  s.to_name, c.tel, s.shipping_addr1, s.shipping_addr2, s.shipping_addr3, s.shipping_zip, o.delivery_state, o.tracking_no
       from ordered o left join order_list l
       on o.order_code = l.order_code
       inner join customer c 
       on o.id = c.id
       left join ship s
       on c.id = s.id
       left join product_list p
       on l.product_code = p.product_code
		order by order_code desc
		<!-- where seller_code = 'solyi' -->
	</select>
	
		<!-- 배송대기 주문목록 -->
	<select id="shippinglist" resultType="com.sunstar.dto.OrderDTO">
	
	   select o.delivery_state, l.product_code, p.price, o.order_code, l.order_no, l.option1, l.option2, l.inventory, l.add_price, o.order_way, o.message, c.name, c.tel, s.shipping_addr1, s.shipping_addr2, s.shipping_addr3, s.shipping_zip
       from ordered o left join order_list l
       on o.order_code = l.order_code
       inner join customer c 
       on o.id = c.id
       left join ship s
       on c.id = s.id
       left join product_list p
       on l.product_code = p.product_code
       where o.delivery_state = '배송준비중'
		<!-- where seller = 'solyi' -->
	</select>
	
	
	<select id="theOrderlist" resultType="com.sunstar.dto.OrderDTO" parameterType="string">
	
	   select o.delivery_state, l.product_code, p.price, o.order_code, l.order_no, l.option1, l.option2, l.inventory, l.add_price, o.order_way, o.message, c.name, c.tel, s.shipping_addr1, s.shipping_addr2, s.shipping_addr3, s.shipping_zip
       from ordered o left join order_list l
       on o.order_code = l.order_code
       inner join customer c 
       on o.id = c.id
       left join ship s
       on c.id = s.id
       left join product_list p
       on l.product_code = p.product_code
       where o.order_code = #{order_code}
		<!-- where seller = 'solyi' -->
	</select>
	
	<!-- 주문목록 - 단계변경  -->
	<update id="changeStep" parameterType="com.sunstar.dto.OrderDTO">
		update ordered
		set delivery_state = #{delivery_state}
		where order_code = #{order_code}
	</update>
	
	<update id="updateTracking" parameterType="com.sunstar.dto.OrderDTO">
		update ordered
		set tracking_no = #{tracking_no}
		where order_code = #{order_code}
	</update>
	
	<select id="sellerInfo" resultType="com.sunstar.dto.SellerDTO">
		select *
		from seller
		where id= 'solyi'
		<!-- 나중에 parameter type에  id도 추가 -->
	
	</select>
	
	<update id="changePublicState" parameterType="com.sunstar.dto.ProductDTO">
		update product_list
		set public_state = #{public_state}
		where product_code = #{product_code}
	</update>
	
	<update id="changeReviewState" parameterType="com.sunstar.dto.ProductDTO">
		update product_list
		set review_state = #{review_state}
		where seller_code = #{seller_code}
		
	</update>
	
	
	
	<update id="changeInfo" parameterType="com.sunstar.dto.SellerDTO">
		update seller
 	 <set>
      <if test="seller_tel   != null   and 	seller_tel  != ''  	">seller_tel=#{seller_tel},</if>
      <if test="seller_email != null   and 	seller_email != '' 	">seller_email=#{seller_email},</if>
      <if test="seller_zip   != null   and seller_zip != '' 	">seller_zip=#{seller_zip},</if>
      <if test="bank         != null   and bank != '' 			">bank=#{bank},</if>
      <if test="bank_no      != null   and bank_no != ''	 	">bank_no=#{bank_no},</if>
      <if test="seller_deadline 	!= null   and seller_deadline     != '' ">seller_deadline=#{seller_deadline}</if>
      <if test="shipping_company    != null   and shipping_company    != '' ">shipping_company=#{shipping_company},</if>
      <if test="basic_shipping_cost	!= null   and basic_shipping_cost != '' ">basic_shipping_cost=#{basic_shipping_cost}</if>
      
     </set>
		
		where seller_code = 11111
	<!-- 	where seller_code = 11111
	 -->	
	
	</update>
	
	
	<select id="getCount" resultType="int">
		select count(*)
		from product_list p  join category c
		on p.category_code = c.category_code
		left join options o
		on p.product_code = o.product_code
		left join seller s
		on p.seller_code = s.seller_code
      <!--   where p.product_code = #{seller_code} -->

	<!-- 	<where>
			<if test="txt != null and txt != ''">
				<choose>
					<when test="txt != null and txt != ''">
						and p.product_code = '%'||#{txt}||'%'
					</when>

					<when test="txt != null and txt != ''">
						and p.product_name like '%'||#{txt}||'%'
				
					</when>
				</choose>
			</if>
		</where> -->
		
	</select>
	
	
	<!-- parameterMap="HashMap" -->
	<select id="productlist"  parameterType="com.sunstar.dto.MakePage"  resultType="com.sunstar.dto.ProductDTO">
		
		
		
		select p.product_code, product_name, price, cost, shipping_cost, o.option1, o.option2, o.inventory, o.add_price, thumb_img, detail_img1, detail_img2, detail_img3, explains,
		 public_state, review_state, c.lv1, c.lv2, c.lv3, p.product_code, s.basic_shipping_cost
		from product_list p  join category c
		on p.category_code = c.category_code
		left join options o
		on p.product_code = o.product_code
		left join seller s
		on p.seller_code = s.seller_code
      <!--   where p.product_code = #{seller_code} -->
    
      <!-- <where>
			<if test="product_code != null and product_code != ''">
				and p.product_code = '%'||#{txt}||'%'
			</if>
			<if test="product_name != null and product_name != ''">
					
						and p.product_name like '%'||#{txt}||'%'
			</if>
		</where>  -->
		
		order by product_code desc
		LIMIT #{startRow}, #{sizePerPage}
	
	</select>
	
	
	<update id="update_seller_info" parameterType="com.sunstar.dto.SellerDTO">
		update seller

	 	<set>
	      <if test="comm_img1   != null   and 	comm_img1  != ''  	">comm_img1=#{comm_img1},</if>
	      <if test="comm_img2 	!= null   and 	comm_img2 != '' 	">comm_img2=#{comm_img2},</if>
	      <if test="comm_img3   != null   and 	comm_img3 != '' 	">comm_img3=#{comm_img3},</if>
	      <if test="seller_bgcolor  != null   and 	seller_bgcolor != '' ">seller_bgcolor=#{seller_bgcolor},</if>
	 	  <if test="seller_color  != null   and 	seller_color != '' ">seller_color=#{seller_color}</if>
	 	
	    </set>	
			where seller_code  = 11111
		</update>
		
		
		<select id="product_list_user"  resultType="com.sunstar.dto.ProductDTO">
		select *
		from product_list
		order by product_code desc
		limit 7,8
		</select>
		
		
		<select id="viewStepOrder" parameterType="string" resultType="com.sunstar.dto.OrderDTO">
			select o.order_code, l.product_code, l.option1, l.option2, l.inventory, l.add_price,  p.price, o.message, 
			o.order_way,  s.to_name, c.tel, s.shipping_addr1, s.shipping_addr2, s.shipping_addr3, s.shipping_zip, o.delivery_state, o.tracking_no
			from ordered o left join order_list l
			on o.order_code = l.order_code
			inner join customer c 
			on o.id = c.id
			left join ship s
			on c.id = s.id
			left join product_list p
			on l.product_code = p.product_code
			where delivery_state = #{view_step}
			order by order_code desc
		</select>
		
		
		<select id="viewProduct"  parameterType="int"  resultType="com.sunstar.dto.ProductDTO">
		
		select p.product_code, product_name, price, cost, shipping_cost, o.option1, o.option2, o.inventory, o.add_price, thumb_img, detail_img1, detail_img2, detail_img3, explains,
		public_state, review_state, c.lv1, c.lv2, c.lv3, p.product_code, s.basic_shipping_cost
		from product_list p  join category c
		on p.category_code = c.category_code
		left join options o
		on p.product_code = o.product_code
		left join seller s
		on p.seller_code = s.seller_code
		
		where p.product_code = #{pcd}
		
		</select>
		
		<update id="updateProduct" parameterType="com.sunstar.dto.ProductDTO">
			update product_list
			
	 	<set>
	      <if test="product_name   != null   and 	product_name  != ''  	">	product_name=#{product_name},</if>
	      <if test="price 	!= null   and 	price 	!= '' 	">	price=#{price},</if>
	      <if test="cost != null   and 	cost != '' 	">	cost=#{cost},</if>
	      <if test="shipping_cost != null   and 	shipping_cost != '' 	">	shipping_cost=#{shipping_cost},</if>
	      <if test="true	">	public_state=#{public_state},</if>
	      <if test="true">	review_state=#{review_state}</if>
	    </set>	
			 	where product_code = #{product_code}
		</update>
		
		
		<select id="getDayProfit" parameterType="string" resultType="com.sunstar.dto.OrderDTO">
			select *
			from ordered o left join order_list l
			on o.order_code = l.order_code
			left join product_list p 
			on l.product_code  = p.product_code
			where o.order_code like CONCAT(#{order_code},'%');


		
		</select>
</mapper>