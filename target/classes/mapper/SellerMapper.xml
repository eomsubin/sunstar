<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sunstar.mapper.SellerMapper">


	<!-- 카테고리 목록 불러오기 -->
	<select id="getCategory" resultType="com.sunstar.dto.CategoryDTO">
		select * from category
	</select>
	
	<!-- 2차 카테고리 갯수 반환 -->
	<select id="getCategoryCount" resultType="int">
		select distinct lv2 from category;
	</select>
	
	<!-- 상품 추가  -->
	<insert id="addProduct" parameterType="com.sunstar.dto.ProductDTO">
		insert into product_list(product_name, price, cost, shipping_cost, thumb_img,explains, public_state, review_state, category_code, seller_code, add_date)
		values(#{product_name},#{price},#{cost},#{shipping_cost},#{thumb_img},#{explains},#{public_state},#{review_state}, #{category_code}, #{seller_code}, now() )
	</insert>
	
	<!--  -->
	<select id="aProduct" resultType="int">
		select product_code
		from product_list 
		where product_code = (select max(product_code) from product_list)
	</select>
	
	<!-- 옵션 추가  -->
	<insert id="addOptions" parameterType="com.sunstar.dto.OptionDTO">

		insert into options(product_code, size, color, inventory, add_price)
		values(#{product_code},#{size},#{color},#{inventory},#{add_price})
	
	</insert>
	
	<!-- 상픔 리스트 (판매자) -->
	<select id="list" resultType="com.sunstar.dto.ProductDTO">
		select p.product_code, product_name, price, cost, shipping_cost, o.size, o.color, o.inventory, o.add_price, public_state, review_state, c.lv1, c.lv2, c.lv3
		from product_list p  join category c
		on p.category_code = c.category_code
		left join options o
        on p.product_code = o.product_code
		order by product_code desc
	</select>
	
	<!-- 옵션 삭제 -->
	<delete id="deleteProductOptions" parameterType="int">
		delete from options where product_code=#{product_code}
	</delete>	
	
	<!-- 상품 삭제  -->
	<delete id="deleteProduct" parameterType="int">
		delete from product_list where product_code=#{product_code}
	</delete>	
	
	<!-- 옵션 가지수 가져오기  -->
	<select id="getOptionColor" parameterType="int" resultType="string">
		select color
		from options
		where product_code=#{product_code}
		order by product_code desc
	</select>
	
	<!-- 재고 업데이트 -->
	<update id="updateInventory" parameterType="com.sunstar.dto.OptionDTO">
		update options 
		set inventory = inventory+#{inventory}
		where product_code=#{product_code} and color=#{color}
	</update>
	
	<!-- 주문목록 -->
	<select id="orderlist" resultType="com.sunstar.dto.OrderDTO">
	
	   select o.delivery_state, l.product_code, p.price, o.order_code, l.order_no, l.color, l.size, l.inventory, l.add_price, o.order_way, o.message, c.name, c.tel, s.shipping_addr1, s.shipping_addr2, s.shipping_addr3, s.shipping_zip
       from ordered o left join order_list l
       on o.order_code = l.order_code
       inner join customer c 
       on o.id = c.id
       left join ship s
       on c.id = s.id
       left join product_list p
       on l.product_code = p.product_code
		<!-- where seller = 'solyi' -->
	</select>
	
		<!-- 배송대기 주문목록 -->
	<select id="shippinglist" resultType="com.sunstar.dto.OrderDTO">
	
	   select o.delivery_state, l.product_code, p.price, o.order_code, l.order_no, l.color, l.size, l.inventory, l.add_price, o.order_way, o.message, c.name, c.tel, s.shipping_addr1, s.shipping_addr2, s.shipping_addr3, s.shipping_zip
       from ordered o left join order_list l
       on o.order_code = l.order_code
       inner join customer c 
       on o.id = c.id
       left join ship s
       on c.id = s.id
       left join product_list p
       on l.product_code = p.product_code
       where o.delivery_state = '배송준비중'
		<!-- where seller = 'solyi' -->
	</select>
	
	
	<select id="theOrderlist" resultType="com.sunstar.dto.OrderDTO" parameterType="string">
	
	   select o.delivery_state, l.product_code, p.price, o.order_code, l.order_no, l.color, l.size, l.inventory, l.add_price, o.order_way, o.message, c.name, c.tel, s.shipping_addr1, s.shipping_addr2, s.shipping_addr3, s.shipping_zip
       from ordered o left join order_list l
       on o.order_code = l.order_code
       inner join customer c 
       on o.id = c.id
       left join ship s
       on c.id = s.id
       left join product_list p
       on l.product_code = p.product_code
       where o.order_code = #{order_code}
		<!-- where seller = 'solyi' -->
	</select>
	
</mapper>