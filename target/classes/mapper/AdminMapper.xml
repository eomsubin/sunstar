<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sunstar.mapper.AdminMapper">
	<!-- jinwoo -->
	<select id="getSellerApply" parameterType="string" resultType="hashmap">
	select distinct * 
	from seller s join auth a 
	on s.id = a.id 
	
	where not s.id in 
						(select s.id 
						 from seller s join auth a 
						 on s.id = a.id 
						 where auth = "ROLE_MANAGER") and s.seller_state = '1'
	</select>	
	
	<select id="getSellerList" parameterType="string" resultType="hashmap">
	<!-- select s.id, s.seller_code, s.id as id2, s.seller_name, s.seller_email, s. seller_address1, s.seller_tel, s.bank, s.business_license, s.seller_deadline -->
	select distinct *
	from seller s left join auth a 
	on s.id = a.id 
	where auth = 'ROLE_MANAGER'
	or s.seller_state = '0'	
	order by seller_code desc
	</select>
	
	<select id="getCSellerList" resultType="hashmap" parameterType="list">
	select * from seller
	where id in
	<foreach item="item" index="index" collection="list"
      open="(" separator="," close=")">
        #{item}
    </foreach> 
	</select>
	
	<select id="getCSellerprduct" resultType="hashmap" parameterType="list">
	select s.id, p.* 
	from product_list p join seller s 
	on p.seller_code=s.seller_code 
	where s.id in 
	<foreach item="item" index="index" collection="list"
      open="(" separator="," close=")">
        #{item}
    </foreach> 	
	</select>
	
	<select id="getCSellerordered" resultType="hashmap" parameterType="list">
	select ol.*, p.*, s.*, o.id as 'customerid', o.order_way, o.message, o.shipping_addr1, o.shipping_addr2, o.shipping_addr3, o.shipping_zip, o.to_name
	from order_list ol left join ordered o 
	on ol.order_code=o.order_code 
	left join product_list p 
	on ol.product_code=p.product_code
	left join seller s
	on s.seller_code = p.seller_code
	where s.id in 
	<foreach item="item" index="index" collection="list"
      open="(" separator="," close=")">
        #{item}
    </foreach> 	
	</select>
	<!-- end jinwoo -->
	
	
	<select id="getLv1" resultType="com.sunstar.dto.CategoryDTO">
		 select distinct lv1 from category
	
	</select>
	
	<select id="getLv2"  resultType="com.sunstar.dto.CategoryDTO" parameterType="string">
		select distinct lv2,lv1,lv2code from category
		
	 
	</select>
		<select id="getLv3"  resultType="com.sunstar.dto.CategoryDTO" parameterType="string">
		select distinct lv3,lv2,lv2code,category_code from category
	
	</select>
	
	<insert id="add_lv2" parameterType="com.sunstar.dto.CategoryDTO">
		<selectKey keyProperty="lv2code,category_code" order="BEFORE" resultType="com.sunstar.dto.CategoryDTO" >
			   select concat(#{lv2con},lpad(max(substr(category_code,2,4))+1,4,"0")) as category_code, concat(#{lv2con},lpad(max(substr(lv2code,2,3))+1,2,"0")) as lv2code
   			 	from category
    			where lv1= #{lv1}
		</selectKey>
	
		insert into category(lv2,lv2code,lv1,category_code,lv3)
		values(#{lv2},#{lv2code},#{lv1},#{category_code},#{lv3})
	
	</insert>
	
	 <insert id="add_lv3" parameterType="com.sunstar.dto.CategoryDTO">
	 	<selectKey keyProperty="lv2code,category_code" order="BEFORE" resultType="com.sunstar.dto.CategoryDTO" >
			   select concat(#{lv2con},lpad(max(substr(category_code,2,4))+1,4,"0")) as category_code, concat(#{lv2con},lpad(max(substr(lv2code,2,3))+1,2,"0")) as lv2code
   			 	from category
    			where lv1= #{lv1}
		</selectKey>
		insert into category(lv2,lv2code,lv1,category_code,lv3)
		values(#{lv2},#{lv2code},#{lv1},#{category_code},#{lv3})
	 
	 
	 
	 </insert>
	
	
	<!-- 메일 가져오기  -->
	<select id="getMails" resultType="com.sunstar.dto.MailDTO">
		select no, category, title, content, id, order_code, date, email
		from mails
		order by no desc
	</select>
</mapper>
	
	