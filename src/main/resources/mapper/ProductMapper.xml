<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sunstar.mapper.ProductMapper">
	<!-- bori -->
    <select id="productview" resultType="com.sunstar.dto.ProductDTO" parameterType="int">
      select p.product_code, product_name, p.thumb_img, price, cost, shipping_cost, public_state, review_state, c.category_code, c.lv1, c.lv2, c.lv2code, c.lv3
      , s.seller_code, seller_name, seller_logo, seller_tel, seller_email, business_license, seller_logo, comm_img1, comm_img2, comm_img3, shipping_company, basic_shipping_cost, free_shipping_cost
      from product_list p  join category c 
      on p.category_code = c.category_code
      join seller s 
      on p.seller_code = s.seller_code 
        where p.product_code = #{product_code}
   </select>
   
   <select id="getOptions" resultType="com.sunstar.dto.OptionDTO" parameterType="int">
   select p.product_code, o.option1, o.option2, o.inventory, o.add_price
   from product_list p left join options o
   on p.product_code = o.product_code
   where p.product_code = #{product_code}
   </select>
	
	<!-- jinwoo -->
	<select id="getproductsellername" resultType="string" parameterType="string">
	select distinct seller_name from seller s
    join product_list p
    on s.seller_Code = p.seller_code
    join category c 
    on c.category_code = p.category_code 
    <where>
	 	<if test="where == 'lv1'">
	 		c.lv1 = #{category}
	 	</if>
	 	<if test="where == 'lv2'">
	 		and c.lv2code = #{category}
	 	</if>
	 	<if test="where == 'lv3'">
	 		and c.category_code = #{category}
	 	</if>
	 </where>	 
	</select>
	
	<select id="getcategorylist" resultType="com.sunstar.dto.CategoryDTO">
	select lv1, lv2, lv2code, lv3, category_code
	from category
	</select>
	
	<select id="gettotalcount" resultType="string" parameterType="string">
	select count(*)
    from product_list p  
    join category c
	on p.category_code = c.category_code
	left join options o
    on p.product_code = o.product_code
    join seller s
    on s.seller_code = p.seller_code
	 <where>
	 	<if test="where == 'lv1'">
	 		c.lv1 = #{category}
	 	</if>
	 	<if test="where == 'lv2'">
	 		and c.lv2code = #{category}
	 	</if>
	 	<if test="where == 'lv3'">
	 		and c.category_code = #{category}
	 	</if>
	 	<if test="s != null">
	 		and s.seller_name = #{s}
	 	</if>
	 </where>	 
	</select>
	
	<select id="getproductList" resultType="com.sunstar.dto.ProductDTO" parameterType="string">
	 select p.product_code, p.price, p.product_name, p.shipping_cost, p.thumb_img, p.explains, p.category_code, p.add_date, c.lv3, c.lv2, c.lv1, c.lv2code, s.seller_name, s.basic_shipping_cost
     from product_list p  
     join category c
	 on p.category_code = c.category_code
	 left join options o
     on p.product_code = o.product_code
     join seller s
     on s.seller_code = p.seller_code
	 <where>
	 	<if test="where == 'lv1'">
	 		c.lv1 = #{category}
	 	</if>
	 	<if test="where == 'lv2'">
	 		and c.lv2code = #{category}
	 	</if>
	 	<if test="where == 'lv3'">
	 		and c.category_code = #{category}
	 	</if>
	 	<if test="s != null">
	 		and s.seller_name = #{s}
	 	</if>
	 </where>	 
	 
	 group by p.product_code
	 order by 
		 <if test="sort == '최신순'">
		 p.product_code desc
		 </if>
		 <if test="sort == '과거순'">
		 p.product_code asc
		 </if>
		 <if test="sort == '이름내림'">
		 p.product_name desc
		 </if>
		 <if test="sort == '이름오름'">
		 p.product_name asc
		 </if>
		 <if test="sort == '비싼순'">
		 p.price desc
		 </if>
		 <if test="sort == '저렴순'">
		 p.price asc
		 </if>
	 limit #{page.startRow}, #{page.sizePerPage};
	</select>
	
	
	<!-- <select id="productListCategorylv1" resultType="com.sunstar.dto.ProductDTO" parameterType="string">
        select p.product_code, p.price, p.product_name, p.thumb_img, p.explains, p.category_code, p.add_date, c.lv3, c.lv2, c.lv1, c.lv2code, s.seller_name, s.basic_shipping_cost
        from product_list p  
        join category c
		on p.category_code = c.category_code
		left join options o
        on p.product_code = o.product_code
        join seller s
        on s.seller_code = p.seller_code
		where c.lv1 = #{lv1}
		<if test="s != null">
		and s.seller_name = #{s}
		</if>
		group by p.product_code
		order by p.product_code desc;
	</select>
	
	<select id="productListCategorylv2" resultType="com.sunstar.dto.ProductDTO" parameterType="string">        
        select p.product_code, p.price, p.product_name, p.thumb_img, p.explains, p.category_code, p.add_date, c.lv3, c.lv2, c.lv1, c.lv2code, s.seller_name, s.basic_shipping_cost
        from product_list p  
        join category c
		on p.category_code = c.category_code
		left join options o
        on p.product_code = o.product_code
        join seller s
        on s.seller_code = p.seller_code
        where c.lv2code = #{lv2}
		group by p.product_code
		order by p.product_code desc;
	</select>
	
	<select id="productListCategorylv3" resultType="com.sunstar.dto.ProductDTO" parameterType="com.sunstar.dto.CategoryDTO">
        select p.product_code, p.price, p.product_name, p.thumb_img, p.explains, p.category_code, p.add_date, c.lv3, c.lv2, c.lv1, c.lv2code, s.seller_name, s.basic_shipping_cost
        from product_list p  
        join category c
		on p.category_code = c.category_code
		left join options o
        on p.product_code = o.product_code
        join seller s
        on s.seller_code = p.seller_code
        where c.category_code = #{lv3} and c.lv2code = #{lv2}
		group by p.product_code
		order by p.product_code desc;
	</select>

	<select id="productlv3bylv2" resultType="com.sunstar.dto.CategoryDTO" parameterType="string">
		select category_code, lv3, lv2, lv2code 
		from category
		where lv2code = #{lv2}
	</select>
	
	<select id="productlv2bylv1" resultType="com.sunstar.dto.CategoryDTO" parameterType="string">
		select distinct lv2, lv2code, lv1
		from category
		where lv1 = #{lv1}
	</select>
	
	<select id="productlv1" resultType="com.sunstar.dto.CategoryDTO" parameterType="string">
		select distinct lv1
		from category
	</select> -->
</mapper>