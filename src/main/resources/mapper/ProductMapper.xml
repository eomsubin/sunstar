<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sunstar.mapper.ProductMapper">
	<!-- bori -->
    <select id="productview" resultType="com.sunstar.dto.ProductDTO" parameterType="int">
      select p.product_code, product_name, p.thumb_img, price, cost, shipping_cost, public_state, review_state, c.category_code, c.lv1, c.lv2, c.lv2code, c.lv3, detail_img1, detail_img2, detail_img3, detail_img4, detail_img5, detail_img6
      , s.seller_code, seller_name, seller_logo, seller_tel, seller_email, business_license, seller_logo, comm_img1, comm_img2, comm_img3, shipping_company, basic_shipping_cost, free_shipping_cost
      from product_list p  join category c 
      on p.category_code = c.category_code
      join seller s 
      on p.seller_code = s.seller_code 
        where p.product_code = #{product_code}
   </select>
   
   <select id="getOptions" resultType="com.sunstar.dto.OptionDTO" parameterType="int">
   select p.product_code, o.option1, o.option2, o.inventory, o.add_price
   from product_list p left join options o
   on p.product_code = o.product_code
   where p.product_code = #{product_code}
   </select>
	
	<!-- jinwoo -->
	<select id="getproductsellername" resultType="string" parameterType="string">
	select distinct seller_name from seller s
    join product_list p
    on s.seller_Code = p.seller_code
    join category c 
    on c.category_code = p.category_code 
    <where>
	 	<if test="where == 'lv1'">
	 		c.lv1 = #{category}
	 	</if>
	 	<if test="where == 'lv2'">
	 		and c.lv2code = #{category}
	 	</if>
	 	<if test="where == 'lv3'">
	 		and c.category_code = #{category}
	 	</if>
	 </where>	 
	</select>
	
	<select id="getcategorylist" resultType="com.sunstar.dto.CategoryDTO">
	select lv1, lv2, lv2code, lv3, category_code
	from category
	</select>
	
	<select id="gettotalcount" resultType="string" parameterType="string">
	select count(*)
    from product_list p  
    join category c
	on p.category_code = c.category_code
	left join options o
    on p.product_code = o.product_code
    join seller s
    on s.seller_code = p.seller_code
	 <where>
	 	<if test="where == 'lv1'">
	 		c.lv1 = #{category}
	 	</if>
	 	<if test="where == 'lv2'">
	 		and c.lv2code = #{category}
	 	</if>
	 	<if test="where == 'lv3'">
	 		and c.category_code = #{category}
	 	</if>
	 	<if test="s != null">
	 		and s.seller_name = #{s}
	 	</if>
	 </where>	 
	</select>
	
	<select id="getproductList" resultType="com.sunstar.dto.ProductDTO" parameterType="string">
	 select p.product_code, p.price, p.product_name, p.shipping_cost, p.thumb_img, p.explains, p.category_code, p.add_date, c.lv3, c.lv2, c.lv1, c.lv2code, s.seller_name, s.basic_shipping_cost
     from product_list p  
     join category c
	 on p.category_code = c.category_code
	 left join options o
     on p.product_code = o.product_code
     join seller s
     on s.seller_code = p.seller_code
	 <where>
	 	<if test="where == 'lv1'">
	 		c.lv1 = #{category}
	 	</if>
	 	<if test="where == 'lv2'">
	 		and c.lv2code = #{category}
	 	</if>
	 	<if test="where == 'lv3'">
	 		and c.category_code = #{category}
	 	</if>
	 	<if test="s != null">
	 		and s.seller_name = #{s}
	 	</if>
	 </where>	 
	 
	 group by p.product_code
	 order by 
		 <if test="sort == '최신순'">
		 p.product_code desc
		 </if>
		 <if test="sort == '과거순'">
		 p.product_code asc
		 </if>
		 <if test="sort == '이름내림'">
		 p.product_name desc
		 </if>
		 <if test="sort == '이름오름'">
		 p.product_name asc
		 </if>
		 <if test="sort == '비싼순'">
		 p.price desc
		 </if>
		 <if test="sort == '저렴순'">
		 p.price asc
		 </if>
	 limit #{page.startRow}, #{page.sizePerPage};
	</select>
	
	<!-- 리뷰 -->
	<select id="reviewList" resultType="com.sunstar.dto.ReviewDTO">
	select r.*, 
	ol.order_code, ol.product_code, ol.quantity, ol.option1, ol.option2,
	rpad(substr(oed.id,1,4),8,'*') as id
	from review r join order_list ol 
	on r.order_no = ol.order_no
	left join ordered oed
	on ol.order_code = oed.order_code
	where product_code = #{product_code}
	</select>
	
	<!-- 리뷰 폼 -->
	<select id="getOrderdetail" resultType="com.sunstar.dto.OrderDTO" parameterType="string">
	select ol.*, p.*, s.seller_name
    from order_list ol 
    join product_list p 
    on ol.product_code = p.product_code 
    join seller s
    on p.seller_code = s.seller_code
    where order_no = #{order_no}
	</select>
	
	<!-- 리뷰 넣기 -->
	<insert id="customerinsertreview">
	insert into review(order_no, review_star, review_writedate, review_content) values(#{order_no},#{review_star},now(),#{review_content});
	</insert>
</mapper>